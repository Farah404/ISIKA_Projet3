package fr.isika.cda17.project3.utils;

import javax.annotation.PostConstruct;
import javax.ejb.Singleton;
import javax.ejb.Startup;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import fr.isika.cda17.project3.model.financialManagement.invoice.BankDetails;
import fr.isika.cda17.project3.model.financialManagement.invoice.BillingAddress;
import fr.isika.cda17.project3.model.financialManagement.store.ShoppingCart;
import fr.isika.cda17.project3.model.financialManagement.store.Wallet;
import fr.isika.cda17.project3.model.personManagement.accounts.AccountType;
import fr.isika.cda17.project3.model.personManagement.accounts.Administrator;
import fr.isika.cda17.project3.model.personManagement.accounts.AdministratorAccount;
import fr.isika.cda17.project3.model.personManagement.accounts.Customer;
import fr.isika.cda17.project3.model.personManagement.accounts.EntityAccount;
import fr.isika.cda17.project3.model.personManagement.accounts.User;
import fr.isika.cda17.project3.model.personManagement.accounts.UserAccount;
import fr.isika.cda17.project3.model.personManagement.assets.Insurance;
import fr.isika.cda17.project3.model.personManagement.assets.Vehicule;
import fr.isika.cda17.project3.model.personManagement.assets.VehiculePowerType;
import fr.isika.cda17.project3.model.personManagement.assets.VehiculeType;
import fr.isika.cda17.project3.model.serviceManagement.CarPoolingService;
import fr.isika.cda17.project3.model.serviceManagement.CarPoolingType;
import fr.isika.cda17.project3.model.serviceManagement.CarRentalService;
import fr.isika.cda17.project3.model.serviceManagement.Itinerary;
import fr.isika.cda17.project3.model.serviceManagement.ParcelService;
import fr.isika.cda17.project3.model.serviceManagement.PersonalAssistanceService;
import fr.isika.cda17.project3.model.serviceManagement.PersonalAssistanceType;
import fr.isika.cda17.project3.model.serviceManagement.ServiceType;
import fr.isika.cda17.project3.model.serviceManagement.Trajectory;
import fr.isika.cda17.project3.model.serviceManagement.TrajectoryType;
import fr.isika.cda17.project3.model.solutionManagement.CarPoolingSolution;
import fr.isika.cda17.project3.model.solutionManagement.MessagingSystemChoice;
import fr.isika.cda17.project3.model.solutionManagement.ParcelSolution;
import fr.isika.cda17.project3.model.solutionManagement.PaymentSystemChoice;
import fr.isika.cda17.project3.model.solutionManagement.PriceDeal;
import fr.isika.cda17.project3.model.solutionManagement.Solution;

@Singleton
@Startup
public class DataSet {
    @PersistenceContext
    private EntityManager em;

    @PostConstruct
    private void initData() {

	// Smariter Admin Account
	AdministratorAccount adSmariterAccount = new AdministratorAccount();
	Administrator adSmariter = new Administrator();
	adSmariterAccount.setProfilePicturePath(null);
	adSmariterAccount.setAccountType(AccountType.ADMINISTRATOR);
	adSmariterAccount.setCreationDate(null);
	adSmariterAccount.setEmail("smartadmin@smariter.com");
	adSmariterAccount.setPassword("123");
	adSmariterAccount.setUsername("Paul");
	adSmariterAccount.setIsActive(true);
	em.persist(adSmariter);
	adSmariter.setAdministratorAccount(adSmariterAccount);
	adSmariter.setEmployeeCode("ZE125R3");
	adSmariter.setFirstName("Paul");
	adSmariter.setLastName("Spektor");
	em.persist(adSmariter);

	// Customer cu1 with solution "EcoCar"
	CarPoolingSolution cps1 = new CarPoolingSolution();
	cps1.setAvailableSeatsOption(true);
	cps1.setCarPoolingTypeOption(true);
	cps1.setMusicAllowedOption(true);
	cps1.setPetAllowedOption(true);
	cps1.setSmokingAllowedOption(true);
	cps1.setChattingAllowedOption(true);
	em.persist(cps1);
	ParcelSolution ps1 = new ParcelSolution();
	ps1.setAtypicalVolumeOption(true);
	ps1.setFragileOoption(true);
	ps1.setWeightKilogrammesOption(true);
	em.persist(ps1);
	Solution so1 = new Solution();
	so1.setCarPoolingSolution(cps1);
	so1.setCarPoolingsolutionIncluded(true);
	so1.setCarRentalSolutionIncluded(true);
	so1.setRatingSystemIncluded(true);
	so1.setSolutionName("EcoCar");
	so1.setParcelSolutionIncluded(true);
	so1.setParcelSolution(ps1);
	so1.setPaymentSystemChoice(PaymentSystemChoice.INTERNAL_CURRENCY);
	so1.setPersonalAssistanceSolutionIncluded(true);
	so1.setPriceDeal(PriceDeal.BUSINESS_VIP);
	so1.setMessagingSystemChoice(MessagingSystemChoice.SERVICE_RELATED_MESSAGING);
	so1.setRatingSystemIncluded(true);
	em.persist(so1);
	BankDetails ba1 = new BankDetails();
	ba1.setBankName("BNP");
	ba1.setIban("z1269874354ry");
	ba1.setSwift("z123");
	em.persist(ba1);
	BillingAddress bi1 = new BillingAddress();
	bi1.setAddressLine("13, rue de paris");
	bi1.setCity("Brest");
	bi1.setCountry("France");
	bi1.setRegion("Bretagne");
	bi1.setPostalCode(29200);
	em.persist(bi1);
	EntityAccount ea1 = new EntityAccount();
	ea1.setProfilePicturePath(null);
	ea1.setIsActive(true);
	ea1.setCreationDate(null);
	ea1.setEmail("ecocar@smariter.com");
	ea1.setPassword("123");
	ea1.setName("EcoCar");
	ea1.setSolution(so1);
	ea1.setBankDetails(ba1);
	ea1.setAccountType(AccountType.ENTITY);
	ea1.setSiretNumber(573002678);
	ea1.setBillingAddress(bi1);
	em.persist(ea1);
	Customer cu1 = new Customer();
	cu1.setFirstName("Hermann");
	cu1.setLastName("Gauduin");
	cu1.setPhoneNumber(06724367);
	cu1.setEntityAccount(ea1);
	cu1.setRole("Représentant commericial");
	so1.setCustomer(cu1);
	em.persist(cu1);

	// Customer cu2 with solution "EcoMobil"
	CarPoolingSolution cps2 = new CarPoolingSolution();
	cps2.setAvailableSeatsOption(true);
	cps2.setCarPoolingTypeOption(false);
	cps2.setMusicAllowedOption(false);
	cps2.setPetAllowedOption(true);
	cps2.setSmokingAllowedOption(true);
	cps2.setChattingAllowedOption(false);
	em.persist(cps2);
	ParcelSolution ps2 = new ParcelSolution();
	ps2.setAtypicalVolumeOption(true);
	ps2.setFragileOoption(true);
	ps2.setWeightKilogrammesOption(true);
	em.persist(ps2);
	Solution so2 = new Solution();
	so2.setCarPoolingSolution(cps2);
	so2.setCarPoolingsolutionIncluded(true);
	so2.setCarRentalSolutionIncluded(true);
	so2.setRatingSystemIncluded(false);
	so2.setSolutionName("EcoMobil'");
	so2.setParcelSolutionIncluded(true);
	so2.setParcelSolution(ps2);
	so2.setPaymentSystemChoice(PaymentSystemChoice.MONETARY);
	so2.setPersonalAssistanceSolutionIncluded(false);
	so2.setPriceDeal(PriceDeal.BUSINESS_BASIC);
	so2.setMessagingSystemChoice(MessagingSystemChoice.NO_RESTRICTION_MESSAGING);
	so2.setRatingSystemIncluded(false);
	em.persist(so2);
	BankDetails ba2 = new BankDetails();
	ba2.setBankName("Société Générale");
	ba2.setIban("z1269214354ry");
	ba2.setSwift("z143");
	em.persist(ba2);
	BillingAddress bi2 = new BillingAddress();
	bi2.setAddressLine("10, Av du la valliette");
	bi2.setCity("Aix-en-provence");
	bi2.setCountry("France");
	bi2.setRegion("Provence-Alpes");
	bi2.setPostalCode(13000);
	em.persist(bi2);
	EntityAccount ea2 = new EntityAccount();
	ea2.setProfilePicturePath(null);
	ea2.setIsActive(true);
	ea2.setCreationDate(null);
	ea2.setEmail("ecomobil@smariter.com");
	ea2.setPassword("123");
	ea2.setName("EcoMobil");
	ea2.setSolution(so2);
	ea2.setBankDetails(ba2);
	ea2.setAccountType(AccountType.ENTITY);
	ea2.setSiretNumber(573002678);
	ea2.setBillingAddress(bi2);
	Customer cu2 = new Customer();
	cu2.setFirstName("Houda");
	cu2.setLastName("Madi");
	cu2.setPhoneNumber(063576202);
	cu2.setRole("Gérant réseaux sociaux");
	cu2.setEntityAccount(ea2);
	so2.setCustomer(cu2);
	em.persist(cu2);

	// Customer cu2 with solution "JeVeuxDepanner"
	CarPoolingSolution cps3 = new CarPoolingSolution();
	cps3.setAvailableSeatsOption(true);
	cps3.setCarPoolingTypeOption(true);
	cps3.setMusicAllowedOption(false);
	cps3.setPetAllowedOption(true);
	cps3.setSmokingAllowedOption(true);
	cps3.setChattingAllowedOption(false);
	em.persist(cps3);
	ParcelSolution ps3 = new ParcelSolution();
	ps3.setAtypicalVolumeOption(false);
	ps3.setFragileOoption(true);
	ps3.setWeightKilogrammesOption(true);
	em.persist(ps3);
	Solution so3 = new Solution();
	so3.setCarPoolingSolution(cps3);
	so3.setCarPoolingsolutionIncluded(true);
	so3.setCarRentalSolutionIncluded(false);
	so3.setRatingSystemIncluded(false);
	so3.setSolutionName("Je veux dépanner");
	so3.setParcelSolutionIncluded(true);
	so3.setParcelSolution(ps3);
	so3.setPaymentSystemChoice(PaymentSystemChoice.INTERNAL_CURRENCY);
	so3.setPersonalAssistanceSolutionIncluded(true);
	so3.setPriceDeal(PriceDeal.BUSINESS_UNLIMITED);
	so3.setMessagingSystemChoice(MessagingSystemChoice.SERVICE_RELATED_MESSAGING);
	so3.setRatingSystemIncluded(true);
	em.persist(so3);
	BankDetails ba3 = new BankDetails();
	ba3.setBankName("BNP");
	ba3.setIban("z1269874354ry");
	ba3.setSwift("z123");
	em.persist(ba3);
	BillingAddress bi3 = new BillingAddress();
	bi3.setAddressLine("13, rue de paris");
	bi3.setCity("Paris");
	bi3.setCountry("France");
	bi3.setRegion("Iles de France");
	bi3.setPostalCode(75000);
	em.persist(bi3);
	EntityAccount ea3 = new EntityAccount();
	ea3.setProfilePicturePath(null);
	ea3.setIsActive(true);
	ea3.setCreationDate(null);
	ea3.setEmail("jvd@smariter.com");
	ea3.setPassword("123");
	ea3.setName("Bias");
	ea3.setSolution(so3);
	ea3.setBankDetails(ba3);
	ea3.setAccountType(AccountType.ENTITY);
	ea3.setSiretNumber(573002678);
	ea3.setBillingAddress(bi3);
	em.persist(ea3);
	Customer cu3 = new Customer();
	cu3.setFirstName("jules");
	cu3.setLastName("Bias");
	cu3.setPhoneNumber(063576202);
	cu3.setEntityAccount(ea3);
	cu3.setRole("Directeur");
	so3.setCustomer(cu3);
	em.persist(cu3);

	// User1
	BankDetails baUa1 = new BankDetails();
	baUa1.setBankName("Banque Postale");
	baUa1.setIban("FR7612548029989876543210917");
	baUa1.setSwift("AE298");
	em.persist(baUa1);
	BillingAddress biUa1 = new BillingAddress();
	biUa1.setAddressLine("3, rue Amiral Labrousse");
	biUa1.setCity("Brest");
	biUa1.setCountry("France");
	biUa1.setPostalCode(29200);
	biUa1.setRegion("Bretagne");
	em.persist(biUa1);
	Insurance iUa1 = new Insurance();
	iUa1.setInsuranceAgencyName("MAIF");
	iUa1.setInsuranceContractNumber("R124124124TRAT");
	iUa1.setInsuranceContractExpiration(null);
	em.persist(iUa1);
	Vehicule vUa1 = new Vehicule();
	vUa1.setBrand("Renault");
	vUa1.setRegistrationNumber("001004005");
	vUa1.setVehiculePowerType(VehiculePowerType.PETROL);
	vUa1.setVehiculeType(VehiculeType.MANUAL);
	vUa1.setAvailableSeats(5);
	vUa1.setInsurance(iUa1);
	em.persist(vUa1);
	Wallet wUa1 = new Wallet();
	wUa1.setInternalCurrencyAmount(140);
	em.persist(wUa1);
	ShoppingCart scUa1 = new ShoppingCart();
	scUa1.setBoughtBatchOneQuantity(0);
	scUa1.setBoughtBatchTwoQuantity(0);
	scUa1.setBoughtBatchThreeQuantity(0);
	scUa1.setBoughtMonthlySubscriptionQuantity(0);
	scUa1.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa1.setBoughtTrimestrialSubscriptionQuantity(0);
	UserAccount ua1 = new UserAccount();
	User u1 = new User();
	ua1.setAccountType(AccountType.USER);
	ua1.setBankDetails(baUa1);
	ua1.setBillingAddress(biUa1);
	ua1.setCreationDate(null);
	ua1.setEmail("hermann@ecocar.com");
	ua1.setPassword("123");
	ua1.setIsActive(true);
	ua1.setProfilePicturePath(null);
	ua1.setUsername("Hermann");
	ua1.setVehicule(vUa1);
	ua1.setWallet(wUa1);
	ua1.setShoppingCart(scUa1);
	em.persist(ua1);
	u1.setBirthDate(null);
	u1.setDrivingPermitNumber(5239458);
	u1.setFirstName("Hermann");
	u1.setLastName("Gauduin");
	u1.setIdentityCardnumber(85649325);
	u1.setPhoneNumber(0764241035);
	u1.setUserAccount(ua1);
	em.persist(u1);

	// User2
	BankDetails baUa2 = new BankDetails();
	baUa2.setBankName("Banque Postale");
	baUa2.setIban("FR7612548029989876543210917");
	baUa2.setSwift("AE298");
	em.persist(baUa2);
	BillingAddress biUa2 = new BillingAddress();
	biUa2.setAddressLine("3, rue Amiral Labrousse");
	biUa2.setCity("Brest");
	biUa2.setCountry("France");
	biUa2.setPostalCode(29200);
	biUa2.setRegion("Bretagne");
	em.persist(biUa2);
	Insurance iUa2 = new Insurance();
	iUa2.setInsuranceAgencyName("MAIF");
	iUa2.setInsuranceContractNumber("CO1569TR954");
	iUa2.setInsuranceContractExpiration(null);
	em.persist(iUa2);
	Vehicule vUa2 = new Vehicule();
	vUa2.setBrand("Tesla");
	vUa2.setRegistrationNumber("439872654");
	vUa2.setVehiculePowerType(VehiculePowerType.ELECTRIC);
	vUa2.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa2.setAvailableSeats(5);
	vUa2.setInsurance(iUa2);
	em.persist(vUa2);
	Wallet wUa2 = new Wallet();
	wUa2.setInternalCurrencyAmount(150);
	em.persist(wUa1);
	ShoppingCart scUa2 = new ShoppingCart();
	scUa2.setBoughtBatchOneQuantity(0);
	scUa2.setBoughtBatchTwoQuantity(0);
	scUa2.setBoughtBatchThreeQuantity(0);
	scUa2.setBoughtMonthlySubscriptionQuantity(0);
	scUa2.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa2.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa2);
	UserAccount ua2 = new UserAccount();
	User u2 = new User();
	ua2.setAccountType(AccountType.USER);
	ua2.setBankDetails(baUa2);
	ua2.setBillingAddress(biUa2);
	ua2.setCreationDate(null);
	ua2.setEmail("farah@ecocar.com");
	ua2.setPassword("123");
	ua2.setIsActive(true);
	ua2.setProfilePicturePath(null);
	ua2.setUsername("Farah");
	ua2.setVehicule(vUa2);
	ua2.setWallet(wUa2);
	ua2.setShoppingCart(scUa2);
	em.persist(ua2);
	u2.setBirthDate(null);
	u2.setDrivingPermitNumber(951753456);
	u2.setFirstName("Farah");
	u2.setLastName("Gauduin");
	u2.setIdentityCardnumber(123456987);
	u2.setPhoneNumber(0764351024);
	u2.setUserAccount(ua2);
	em.persist(u2);

	// User3
	BankDetails baUa3 = new BankDetails();
	baUa3.setBankName("Société Générale");
	baUa3.setIban("FR7630003035409876543210925");
	baUa3.setSwift("FN2365");
	em.persist(baUa3);
	BillingAddress biUa3 = new BillingAddress();
	biUa3.setAddressLine("3, rue des Alpes");
	biUa3.setCity("Grenoble");
	biUa3.setCountry("France");
	biUa3.setPostalCode(38000);
	biUa3.setRegion("Isère");
	em.persist(biUa3);
	Insurance iUa3 = new Insurance();
	iUa3.setInsuranceAgencyName("Assurance Car");
	iUa3.setInsuranceContractNumber("TRA12649");
	iUa3.setInsuranceContractExpiration(null);
	em.persist(iUa3);
	Vehicule vUa3 = new Vehicule();
	vUa3.setBrand("Renault");
	vUa3.setRegistrationNumber("439872654");
	vUa3.setVehiculePowerType(VehiculePowerType.DIESEL);
	vUa3.setVehiculeType(VehiculeType.MANUAL);
	vUa3.setAvailableSeats(5);
	vUa3.setInsurance(iUa3);
	em.persist(vUa3);
	Wallet wUa3 = new Wallet();
	wUa3.setInternalCurrencyAmount(45);
	em.persist(wUa1);
	ShoppingCart scUa3 = new ShoppingCart();
	scUa3.setBoughtBatchOneQuantity(0);
	scUa3.setBoughtBatchTwoQuantity(0);
	scUa3.setBoughtBatchThreeQuantity(0);
	scUa3.setBoughtMonthlySubscriptionQuantity(0);
	scUa3.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa3.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa3);
	UserAccount ua3 = new UserAccount();
	User u3 = new User();
	ua3.setAccountType(AccountType.USER);
	ua3.setBankDetails(baUa3);
	ua3.setBillingAddress(biUa3);
	ua3.setCreationDate(null);
	ua3.setEmail("François@ecocar.com");
	ua3.setPassword("123");
	ua3.setIsActive(true);
	ua3.setProfilePicturePath(null);
	ua3.setUsername("Francois");
	ua3.setVehicule(vUa3);
	ua3.setWallet(wUa3);
	ua3.setShoppingCart(scUa3);
	em.persist(ua3);
	u3.setBirthDate(null);
	u3.setDrivingPermitNumber(8619077);
	u3.setFirstName("François-Noël");
	u3.setLastName("Bernal");
	u3.setIdentityCardnumber(2939099);
	u3.setPhoneNumber(0643625);
	u3.setUserAccount(ua3);
	em.persist(u3);

	// User4
	BankDetails baUa4 = new BankDetails();
	baUa4.setBankName("BNP Paribas");
	baUa4.setIban("FR7630004028379876543210943");
	baUa4.setSwift("BNP648");
	em.persist(baUa4);
	BillingAddress biUa4 = new BillingAddress();
	biUa4.setAddressLine("15, rue de Paris");
	biUa4.setCity("Paris");
	biUa4.setCountry("France");
	biUa4.setPostalCode(75000);
	biUa4.setRegion("Iles de France");
	em.persist(biUa4);
	Insurance iUa4 = new Insurance();
	iUa4.setInsuranceAgencyName("Eco Mobile");
	iUa4.setInsuranceContractNumber("Mob5648");
	iUa4.setInsuranceContractExpiration(null);
	em.persist(iUa4);
	Vehicule vUa4 = new Vehicule();
	vUa4.setBrand("Ford");
	vUa4.setRegistrationNumber("439872654");
	vUa4.setVehiculePowerType(VehiculePowerType.HYBRID);
	vUa4.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa4.setAvailableSeats(5);
	vUa4.setInsurance(iUa4);
	em.persist(vUa4);
	Wallet wUa4 = new Wallet();
	wUa4.setInternalCurrencyAmount(150);
	em.persist(wUa1);
	ShoppingCart scUa4 = new ShoppingCart();
	scUa4.setBoughtBatchOneQuantity(0);
	scUa4.setBoughtBatchTwoQuantity(0);
	scUa4.setBoughtBatchThreeQuantity(0);
	scUa4.setBoughtMonthlySubscriptionQuantity(0);
	scUa4.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa4.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa4);
	UserAccount ua4 = new UserAccount();
	User u4 = new User();
	ua4.setAccountType(AccountType.USER);
	ua4.setBankDetails(baUa4);
	ua4.setBillingAddress(biUa4);
	ua4.setCreationDate(null);
	ua4.setEmail("Houda@ecocar.com");
	ua4.setPassword("123");
	ua4.setIsActive(true);
	ua4.setProfilePicturePath(null);
	ua4.setUsername("Houda");
	ua4.setVehicule(vUa4);
	ua4.setWallet(wUa4);
	ua4.setShoppingCart(scUa4);
	em.persist(ua4);
	u4.setBirthDate(null);
	u4.setDrivingPermitNumber(7395832);
	u4.setFirstName("Houda");
	u4.setLastName("Madi");
	u4.setIdentityCardnumber(3215769);
	u4.setPhoneNumber(07453265);
	u4.setUserAccount(ua4);
	em.persist(u4);
	
	//User5
	BankDetails baUa5 = new BankDetails();
	baUa5.setBankName("HSBC");
	baUa5.setIban("FR1420041010050500013M02606");
	baUa5.setSwift("HSXB5");
	em.persist(baUa5);
	BillingAddress biUa5 = new BillingAddress();
	biUa5.setAddressLine("6, rue des Poules");
	biUa5.setCity("Dijon");
	biUa5.setCountry("France");
	biUa5.setPostalCode(21000);
	biUa5.setRegion("Côte-d'Or");
	em.persist(biUa5);
	Insurance iUa5 = new Insurance();
	iUa5.setInsuranceAgencyName("Eco Mobile");
	iUa5.setInsuranceContractNumber("MA26FI");
	iUa5.setInsuranceContractExpiration(null);
	em.persist(iUa5);
	Vehicule vUa5 = new Vehicule();
	vUa5.setBrand("Mercedes-Benz");
	vUa5.setRegistrationNumber("4303640");
	vUa5.setVehiculePowerType(VehiculePowerType.ELECTRIC);
	vUa5.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa5.setAvailableSeats(5);
	vUa5.setInsurance(iUa5);
	em.persist(vUa5);
	Wallet wUa5 = new Wallet();
	wUa5.setInternalCurrencyAmount(30);
	em.persist(wUa1);
	ShoppingCart scUa5 = new ShoppingCart();
	scUa5.setBoughtBatchOneQuantity(0);
	scUa5.setBoughtBatchTwoQuantity(0);
	scUa5.setBoughtBatchThreeQuantity(0);
	scUa5.setBoughtMonthlySubscriptionQuantity(0);
	scUa5.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa5.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa5);
	UserAccount ua5 = new UserAccount();
	User u5 = new User();
	ua5.setAccountType(AccountType.USER);
	ua5.setBankDetails(baUa5);
	ua5.setBillingAddress(biUa5);
	ua5.setCreationDate(null);
	ua5.setEmail("Yannick@ecocar.com");
	ua5.setPassword("123");
	ua5.setIsActive(true);
	ua5.setProfilePicturePath(null);
	ua5.setUsername("Yannick");
	ua5.setVehicule(vUa5);
	ua5.setWallet(wUa5);
	ua5.setShoppingCart(scUa5);
	em.persist(ua5);
	u5.setBirthDate(null);
	u5.setDrivingPermitNumber(4532553);
	u5.setFirstName("Yannick");
	u5.setLastName("Sourigues");
	u5.setIdentityCardnumber(7587190);
	u5.setPhoneNumber(0764351024);
	u5.setUserAccount(ua5);
	em.persist(u5);
	
	//User6
	BankDetails baUa6 = new BankDetails();
	baUa6.setBankName("AXA Banque");
	baUa6.setIban("FR7612548029989876543210917");
	baUa6.setSwift("A12X32A65");
	em.persist(baUa6);
	BillingAddress biUa6 = new BillingAddress();
	biUa6.setAddressLine("21, rue des Fleurs");
	biUa6.setCity("Paris");
	biUa6.setCountry("France");
	biUa6.setPostalCode(29200);
	biUa6.setRegion("Paris");
	em.persist(biUa6);
	Insurance iUa6 = new Insurance();
	iUa6.setInsuranceAgencyName("MAAF Assurance");
	iUa6.setInsuranceContractNumber("26985AE");
	iUa6.setInsuranceContractExpiration(null);
	em.persist(iUa6);
	Vehicule vUa6 = new Vehicule();
	vUa6.setBrand("Kia");
	vUa6.setRegistrationNumber("9359311");
	vUa6.setVehiculePowerType(VehiculePowerType.PETROL);
	vUa6.setVehiculeType(VehiculeType.MANUAL);
	vUa6.setAvailableSeats(5);
	vUa6.setInsurance(iUa6);
	em.persist(vUa6);
	Wallet wUa6 = new Wallet();
	wUa6.setInternalCurrencyAmount(8);
	em.persist(wUa1);
	ShoppingCart scUa6 = new ShoppingCart();
	scUa6.setBoughtBatchOneQuantity(0);
	scUa6.setBoughtBatchTwoQuantity(0);
	scUa6.setBoughtBatchThreeQuantity(0);
	scUa6.setBoughtMonthlySubscriptionQuantity(0);
	scUa6.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa6.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa6);
	UserAccount ua6 = new UserAccount();
	User u6 = new User();
	ua6.setAccountType(AccountType.USER);
	ua6.setBankDetails(baUa6);
	ua6.setBillingAddress(biUa6);
	ua6.setCreationDate(null);
	ua6.setEmail("Benjamin@ecocar.com");
	ua6.setPassword("123");
	ua6.setIsActive(true);
	ua6.setProfilePicturePath(null);
	ua6.setUsername("Benjamin");
	ua6.setVehicule(vUa6);
	ua6.setWallet(wUa6);
	ua6.setShoppingCart(scUa6);
	em.persist(ua6);
	u6.setBirthDate(null);
	u6.setDrivingPermitNumber(4532553);
	u6.setFirstName("Benjamin");
	u6.setLastName("Dubois");
	u6.setIdentityCardnumber(7587190);
	u6.setPhoneNumber(0764351024);
	u6.setUserAccount(ua6);
	em.persist(u6);
	
	//User7
	BankDetails baUa7 = new BankDetails();
	baUa7.setBankName("Société Générale");
	baUa7.setIban("FR7630003035409876543210925");
	baUa7.setSwift("HD569UJ");
	em.persist(baUa7);
	BillingAddress biUa7 = new BillingAddress();
	biUa7.setAddressLine("9, rue Jean Jaurès");
	biUa7.setCity("Paris");
	biUa7.setCountry("France");
	biUa7.setPostalCode(75000);
	biUa7.setRegion("Paris");
	em.persist(biUa7);
	Insurance iUa7 = new Insurance();
	iUa7.setInsuranceAgencyName("MAAF Assurance");
	iUa7.setInsuranceContractNumber("9841TR");
	iUa7.setInsuranceContractExpiration(null);
	em.persist(iUa7);
	Vehicule vUa7 = new Vehicule();
	vUa7.setBrand("Fiat");
	vUa7.setRegistrationNumber("2537102");
	vUa7.setVehiculePowerType(VehiculePowerType.ELECTRIC);
	vUa7.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa7.setAvailableSeats(5);
	vUa7.setInsurance(iUa7);
	em.persist(vUa7);
	Wallet wUa7 = new Wallet();
	wUa7.setInternalCurrencyAmount(260);
	em.persist(wUa1);
	ShoppingCart scUa7 = new ShoppingCart();
	scUa7.setBoughtBatchOneQuantity(0);
	scUa7.setBoughtBatchTwoQuantity(0);
	scUa7.setBoughtBatchThreeQuantity(0);
	scUa7.setBoughtMonthlySubscriptionQuantity(0);
	scUa7.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa7.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa7);
	UserAccount ua7 = new UserAccount();
	User u7 = new User();
	ua7.setAccountType(AccountType.USER);
	ua7.setBankDetails(baUa7);
	ua7.setBillingAddress(biUa7);
	ua7.setCreationDate(null);
	ua7.setEmail("Jules@ecocar.com");
	ua7.setPassword("123");
	ua7.setIsActive(true);
	ua7.setProfilePicturePath(null);
	ua7.setUsername("Jules");
	ua7.setVehicule(vUa7);
	ua7.setWallet(wUa7);
	ua7.setShoppingCart(scUa7);
	em.persist(ua7);
	u7.setBirthDate(null);
	u7.setDrivingPermitNumber(5218536);
	u7.setFirstName("Jules");
	u7.setLastName("Bias");
	u7.setIdentityCardnumber(5530882);
	u7.setPhoneNumber(0764351024);
	u7.setUserAccount(ua7);
	em.persist(u7);
	
	//User8
	BankDetails baUa8 = new BankDetails();
	baUa8.setBankName("Banque Postale");
	baUa8.setIban("FR7612548029989876543210917");
	baUa8.setSwift("SP659874");
	em.persist(baUa8);
	BillingAddress biUa8 = new BillingAddress();
	biUa8.setAddressLine("9, rue du Général");
	biUa8.setCity("Avignon");
	biUa8.setCountry("France");
	biUa8.setPostalCode(84000);
	biUa8.setRegion("Vaucluse");
	em.persist(biUa8);
	Insurance iUa8 = new Insurance();
	iUa8.setInsuranceAgencyName("Macif");
	iUa8.setInsuranceContractNumber("XOD23658");
	iUa8.setInsuranceContractExpiration(null);
	em.persist(iUa8);
	Vehicule vUa8 = new Vehicule();
	vUa8.setBrand("Peugeot");
	vUa8.setRegistrationNumber("3793447");
	vUa8.setVehiculePowerType(VehiculePowerType.ELECTRIC);
	vUa8.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa8.setAvailableSeats(5);
	vUa8.setInsurance(iUa8);
	em.persist(vUa8);
	Wallet wUa8 = new Wallet();
	wUa8.setInternalCurrencyAmount(0);
	em.persist(wUa1);
	ShoppingCart scUa8 = new ShoppingCart();
	scUa8.setBoughtBatchOneQuantity(0);
	scUa8.setBoughtBatchTwoQuantity(0);
	scUa8.setBoughtBatchThreeQuantity(0);
	scUa8.setBoughtMonthlySubscriptionQuantity(0);
	scUa8.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa8.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa8);
	UserAccount ua8 = new UserAccount();
	User u8 = new User();
	ua8.setAccountType(AccountType.USER);
	ua8.setBankDetails(baUa8);
	ua8.setBillingAddress(biUa8);
	ua8.setCreationDate(null);
	ua8.setEmail("Hamid@ecocar.com");
	ua8.setPassword("123");
	ua8.setIsActive(true);
	ua8.setProfilePicturePath(null);
	ua8.setUsername("Hamid");
	ua8.setVehicule(vUa8);
	ua8.setWallet(wUa8);
	ua8.setShoppingCart(scUa8);
	em.persist(ua8);
	u8.setBirthDate(null);
	u8.setDrivingPermitNumber(951753456);
	u8.setFirstName("Hamid");
	u8.setLastName("Gauduin");
	u8.setIdentityCardnumber(123456987);
	u8.setPhoneNumber(0764351024);
	u8.setUserAccount(ua8);
	em.persist(u8);

	//User9
	BankDetails baUa9 = new BankDetails();
	baUa9.setBankName("AXA Banque");
	baUa9.setIban("FR1420041010050500013M02606");
	baUa9.setSwift("OP2698S");
	em.persist(baUa9);
	BillingAddress biUa9 = new BillingAddress();
	biUa9.setAddressLine("9, rue des Oiseaux");
	biUa9.setCity("Bordeaux");
	biUa9.setCountry("France");
	biUa9.setPostalCode(30072);
	biUa9.setRegion("Gironde");
	em.persist(biUa9);
	Insurance iUa9 = new Insurance();
	iUa9.setInsuranceAgencyName("Matmut");
	iUa9.setInsuranceContractNumber("MAT958MUT");
	iUa9.setInsuranceContractExpiration(null);
	em.persist(iUa9);
	Vehicule vUa9 = new Vehicule();
	vUa9.setBrand("Peugeot");
	vUa9.setRegistrationNumber("4297647");
	vUa9.setVehiculePowerType(VehiculePowerType.ELECTRIC);
	vUa9.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa9.setAvailableSeats(5);
	vUa9.setInsurance(iUa9);
	em.persist(vUa9);
	Wallet wUa9 = new Wallet();
	wUa9.setInternalCurrencyAmount(265);
	em.persist(wUa1);
	ShoppingCart scUa9 = new ShoppingCart();
	scUa9.setBoughtBatchOneQuantity(0);
	scUa9.setBoughtBatchTwoQuantity(0);
	scUa9.setBoughtBatchThreeQuantity(0);
	scUa9.setBoughtMonthlySubscriptionQuantity(0);
	scUa9.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa9.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa9);
	UserAccount ua9 = new UserAccount();
	User u9 = new User();
	ua9.setAccountType(AccountType.USER);
	ua9.setBankDetails(baUa9);
	ua9.setBillingAddress(biUa9);
	ua9.setCreationDate(null);
	ua9.setEmail("Romuald@ecocar.com");
	ua9.setPassword("123");
	ua9.setIsActive(true);
	ua9.setProfilePicturePath(null);
	ua9.setUsername("Romuald");
	ua9.setVehicule(vUa9);
	ua9.setWallet(wUa9);
	ua9.setShoppingCart(scUa9);
	em.persist(ua9);
	u9.setBirthDate(null);
	u9.setDrivingPermitNumber(7762147);
	u9.setFirstName("Romuald");
	u9.setLastName("Nguenga");
	u9.setIdentityCardnumber(5778658);
	u9.setPhoneNumber(07444151);
	u9.setUserAccount(ua9);
	em.persist(u9);
	
	//User10
	BankDetails baUa10 = new BankDetails();
	baUa10.setBankName("Société Générale");
	baUa10.setIban("FR7630004028379876543210943");
	baUa10.setSwift("G2A5I7A98");
	em.persist(baUa10);
	BillingAddress biUa10 = new BillingAddress();
	biUa10.setAddressLine("3, rue Amiral Labrousse");
	biUa10.setCity("Brest");
	biUa10.setCountry("France");
	biUa10.setPostalCode(29200);
	biUa10.setRegion("Bretagne");
	em.persist(biUa10);
	Insurance iUa10 = new Insurance();
	iUa10.setInsuranceAgencyName("MAIF");
	iUa10.setInsuranceContractNumber("87746AEV");
	iUa10.setInsuranceContractExpiration(null);
	em.persist(iUa10);
	Vehicule vUa10 = new Vehicule();
	vUa10.setBrand("Tesla");
	vUa10.setRegistrationNumber("439872654");
	vUa10.setVehiculePowerType(VehiculePowerType.ELECTRIC);
	vUa10.setVehiculeType(VehiculeType.AUTOMATIC);
	vUa10.setAvailableSeats(5);
	vUa10.setInsurance(iUa10);
	em.persist(vUa10);
	Wallet wUa10 = new Wallet();
	wUa10.setInternalCurrencyAmount(74);
	em.persist(wUa1);
	ShoppingCart scUa10 = new ShoppingCart();
	scUa10.setBoughtBatchOneQuantity(0);
	scUa10.setBoughtBatchTwoQuantity(0);
	scUa10.setBoughtBatchThreeQuantity(0);
	scUa10.setBoughtMonthlySubscriptionQuantity(0);
	scUa10.setBoughtTrimestrialSubscriptionQuantity(0);
	scUa10.setBoughtTrimestrialSubscriptionQuantity(0);
	em.persist(scUa10);
	UserAccount ua10 = new UserAccount();
	User u10 = new User();
	ua10.setAccountType(AccountType.USER);
	ua10.setBankDetails(baUa10);
	ua10.setBillingAddress(biUa10);
	ua10.setCreationDate(null);
	ua10.setEmail("Gaïa@ecocar.com");
	ua10.setPassword("123");
	ua10.setIsActive(true);
	ua10.setProfilePicturePath(null);
	ua10.setUsername("Gaïa");
	ua10.setVehicule(vUa10);
	ua10.setWallet(wUa10);
	ua10.setShoppingCart(scUa10);
	em.persist(ua10);
	u10.setBirthDate(null);
	u10.setDrivingPermitNumber(9340798);
	u10.setFirstName("Gaïa");
	u10.setLastName("Bissé");
	u10.setIdentityCardnumber(7554294);
	u10.setPhoneNumber(0764351024);
	u10.setUserAccount(ua10);
	em.persist(u10);

	//Itineraries & Trajectories
	Itinerary i1 = new Itinerary();
	i1.setFirstStopAddress("Rennes");
	i1.setSecondStopAddress("Le Mans");
	i1.setThirdStopAddress("Chartres");
	em.persist(i1);
	Trajectory t1 = new Trajectory();
	t1.setPickUpAddress("121 Boulevard de l'Hopital 29200 Brest");
	t1.setDeliveryAddress("48 Rue d'Amsterdam 75009 Paris");
	t1.setDurationHours(8);
	t1.setStopDurationMinutes(30);
	t1.setStopNumber(3);
	t1.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t1.setItinerary(i1);
	em.persist(t1);
	
	Itinerary i2 = new Itinerary();
	i2.setFirstStopAddress("Saint-Brieuc");
	i2.setSecondStopAddress("Rennes");
	i2.setThirdStopAddress("Chartres");
	em.persist(i2);
	Trajectory t2 = new Trajectory();
	t2.setPickUpAddress("64 Boulevard Haussmann 86000 Poitiers");
	t2.setDeliveryAddress("8 Rue de la Bidassoam 10420 Troyes");
	t2.setDurationHours(6);
	t2.setStopDurationMinutes(20);
	t2.setStopNumber(3);
	t2.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t2.setItinerary(i2);
	em.persist(t2);
	
	Itinerary i3 = new Itinerary();
	i3.setFirstStopAddress("Tours");
	i3.setSecondStopAddress("Orléans");
	i3.setThirdStopAddress("Montargis");
	em.persist(i3);
	Trajectory t3 = new Trajectory();
	t3.setPickUpAddress("13 Rue Tiquetonne 29200 Brest");
	t3.setDeliveryAddress("109 Avenue d'Ivry 75013 Paris");
	t3.setDurationHours(8);
	t3.setStopDurationMinutes(20);
	t3.setStopNumber(3);
	t3.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t3.setItinerary(i3);
	em.persist(t3);
	
	Itinerary i4 = new Itinerary();
	i4.setFirstStopAddress("Amiens");
	i4.setSecondStopAddress("Orléans");
	i4.setThirdStopAddress("Lens");
	em.persist(i4);
	Trajectory t4 = new Trajectory();
	t4.setPickUpAddress("5 Rue Villedo 75001 Paris");
	t4.setDeliveryAddress("20 Rue Alibert 59000 Lille");
	t4.setDurationHours(4);
	t4.setStopDurationMinutes(20);
	t4.setStopNumber(3);
	t4.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t4.setItinerary(i4);
	em.persist(t4);
	
	Itinerary i5 = new Itinerary();
	i5.setFirstStopAddress("Narbonne");
	i5.setSecondStopAddress("Carcassone");
	i5.setThirdStopAddress("Labège");
	em.persist(i5);
	Trajectory t5 = new Trajectory();
	t5.setPickUpAddress("11 Rue Danielle 34000 Montpellier");
	t5.setDeliveryAddress("127 Avenue Parmentier 31000 Toulouse");
	t5.setDurationHours(4);
	t5.setStopDurationMinutes(20);
	t5.setStopNumber(3);
	t5.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t5.setItinerary(i5);
	em.persist(t5);
	
	Itinerary i6 = new Itinerary();
	i6.setFirstStopAddress("Montauban");
	i6.setSecondStopAddress("Valence");
	i6.setThirdStopAddress("Langon");
	em.persist(i6);
	Trajectory t6 = new Trajectory();
	t6.setPickUpAddress("8 Rue Nicolas Charlet 31000 Toulouse");
	t6.setDeliveryAddress("5 Boulevard de la Villette 30072 Bordeaux");
	t6.setDurationHours(4);
	t6.setStopDurationMinutes(20);
	t6.setStopNumber(3);
	t6.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t6.setItinerary(i6);
	em.persist(t6);
	
	Itinerary i7 = new Itinerary();
	i7.setFirstStopAddress("Bordeaux");
	i7.setSecondStopAddress("Poitiers");
	i7.setThirdStopAddress("Tours");
	em.persist(i7);
	Trajectory t7 = new Trajectory();
	t7.setPickUpAddress("17 Place de la Bourse 64000 Pau");
	t7.setDeliveryAddress("51 Rue Arbre Sec 75001 Paris");
	t7.setDurationHours(4);
	t7.setStopDurationMinutes(25);
	t7.setStopNumber(3);
	t7.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t7.setItinerary(i7);
	em.persist(t7);
	
	Itinerary i8 = new Itinerary();
	i8.setFirstStopAddress("Roubaix");
	i8.setSecondStopAddress("Bruges");
	i8.setThirdStopAddress("Ghent");
	em.persist(i8);
	Trajectory t8 = new Trajectory();
	t8.setPickUpAddress("19 Rue Antoine 59000 Lille");
	t8.setDeliveryAddress("85 Avenue de Wagram 10470 Brussels");
	t8.setDurationHours(2);
	t8.setStopDurationMinutes(15);
	t8.setStopNumber(3);
	t8.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t8.setItinerary(i8);
	em.persist(t8);
	
	Itinerary i9 = new Itinerary();
	i9.setFirstStopAddress("Metz");
	i9.setSecondStopAddress(null);
	i9.setThirdStopAddress(null);
	em.persist(i9);
	Trajectory t9 = new Trajectory();
	t9.setPickUpAddress("156 Avenue Ledru Rollin 54000 Nancy");
	t9.setDeliveryAddress("61 Rue Pierre Charron 10740 Luxembourg");
	t9.setDurationHours(2);
	t9.setStopDurationMinutes(35);
	t9.setStopNumber(1);
	t9.setTrajectoryType(TrajectoryType.PUNCTUAL);
	t9.setItinerary(i9);
	em.persist(t9);
	
	Itinerary i10 = new Itinerary();
	i10.setFirstStopAddress("Mulhouse");
	i10.setSecondStopAddress(null);
	i10.setThirdStopAddress(null);
	em.persist(i10);
	Trajectory t10 = new Trajectory();
	t10.setPickUpAddress("7 Rue Andre Lefebvre 67000 Strasbourg");
	t10.setDeliveryAddress( "24 Rue de Sevres 30018 Bern");
	t10.setDurationHours(2);
	t10.setStopDurationMinutes(30);
	t10.setStopNumber(1);
	t10.setTrajectoryType(TrajectoryType.REGULAR);
	t10.setItinerary(i10);
	em.persist(t10);
	
	Itinerary i11 = new Itinerary();
	i11.setFirstStopAddress(null);
	i11.setSecondStopAddress(null);
	i11.setThirdStopAddress(null);
	em.persist(i11);
	Trajectory t11 = new Trajectory();
	t11.setPickUpAddress("42 Rue de Lancry 75018 Paris");
	t11.setDeliveryAddress("67 Rue Marx Dormoy 75018 Paris");
	t11.setDurationHours(1);
	t11.setStopDurationMinutes(0);
	t11.setStopNumber(0);
	t11.setTrajectoryType(TrajectoryType.REGULAR);
	t11.setItinerary(i11);
	em.persist(t11);
	
	Itinerary i12 = new Itinerary();
	i12.setFirstStopAddress(null);
	i12.setSecondStopAddress(null);
	i12.setThirdStopAddress(null);
	em.persist(i12);
	Trajectory t12 = new Trajectory();
	t12.setPickUpAddress("15 Rue des Martyrs 29200 Brest");
	t12.setDeliveryAddress("16 Rue d'Antin 29200 Brest");
	t12.setDurationHours(1);
	t12.setStopDurationMinutes(0);
	t12.setStopNumber(0);
	t12.setTrajectoryType(TrajectoryType.REGULAR);
	t12.setItinerary(i12);
	em.persist(t12);
	
	Itinerary i13 = new Itinerary();
	i13.setFirstStopAddress(null);
	i13.setSecondStopAddress(null);
	i13.setThirdStopAddress(null);
	em.persist(i13);
	Trajectory t13 = new Trajectory();
	t13.setPickUpAddress("7 Rue Tournefort 38000 Grenoble");
	t13.setDeliveryAddress("21 Rue Avre 38000 Grenoble");
	t13.setDurationHours(1);
	t13.setStopDurationMinutes(0);
	t13.setStopNumber(0);
	t13.setTrajectoryType(TrajectoryType.REGULAR);
	t13.setItinerary(i13);
	em.persist(t13);
	
	Itinerary i14 = new Itinerary();
	i14.setFirstStopAddress(null);
	i14.setSecondStopAddress(null);
	i14.setThirdStopAddress(null);
	em.persist(i14);
	Trajectory t14 = new Trajectory();
	t14.setPickUpAddress("94 Rue Saint-Lazare 30072 Bordeaux");
	t14.setDeliveryAddress("5 Rue Massenet 30072 Bordeaux");
	t14.setDurationHours(1);
	t14.setStopDurationMinutes(0);
	t14.setStopNumber(0);
	t14.setTrajectoryType(TrajectoryType.REGULAR);
	t14.setItinerary(i14);
	em.persist(t14);
	
	Itinerary i15 = new Itinerary();
	i15.setFirstStopAddress(null);
	i15.setSecondStopAddress(null);
	i15.setThirdStopAddress(null);
	em.persist(i15);
	Trajectory t15 = new Trajectory();
	t15.setPickUpAddress("78 Rue de Provence 66000 Perpignan");
	t15.setDeliveryAddress("88 Ter Avenue Parmentier 66000 Perpignan");
	t15.setDurationHours(1);
	t15.setStopDurationMinutes(0);
	t15.setStopNumber(0);
	t15.setTrajectoryType(TrajectoryType.REGULAR);
	t15.setItinerary(i15);
	em.persist(t15);
	
	//CarPooling Services
	CarPoolingService cpsrv1 = new CarPoolingService();
	cpsrv1.setServicetype(ServiceType.CAR_POOLING);
	cpsrv1.setPublicationDate(null);
	cpsrv1.setReferenceNumber("855583637");
	cpsrv1.setUnavailable(false);
	cpsrv1.setStartDate(null);
	cpsrv1.setEndDate(null);
	cpsrv1.setRequest(false);
	cpsrv1.setPrice(10);
	cpsrv1.setCarPoolingType(CarPoolingType.HOME_TO_WORK);
	cpsrv1.setAvailableSeats(3);
	cpsrv1.setPetAllowed(false);
	cpsrv1.setSmokingAllowed(false);
	cpsrv1.setMusicAllowed(false);
	cpsrv1.setChattingAllowed(true);
	cpsrv1.setUserAccountProvider(ua1);
	cpsrv1.setTrajectory(t1);
	em.persist(cpsrv1);
	
	CarPoolingService cpsrv2 = new CarPoolingService();
	cpsrv2.setServicetype(ServiceType.CAR_POOLING);
	cpsrv2.setPublicationDate(null);
	cpsrv2.setReferenceNumber("953518504");
	cpsrv2.setUnavailable(false);
	cpsrv2.setStartDate(null);
	cpsrv2.setEndDate(null);
	cpsrv2.setRequest(false);
	cpsrv2.setPrice(15);
	cpsrv2.setCarPoolingType(CarPoolingType.HOME_TO_SCHOOL);
	cpsrv2.setAvailableSeats(2);
	cpsrv2.setPetAllowed(true);
	cpsrv2.setSmokingAllowed(true);
	cpsrv2.setMusicAllowed(false);
	cpsrv2.setChattingAllowed(false);
	cpsrv2.setUserAccountProvider(ua3);
	cpsrv2.setTrajectory(t13);
	em.persist(cpsrv2);
	
	CarPoolingService cpsrv3 = new CarPoolingService();
	cpsrv3.setServicetype(ServiceType.CAR_POOLING);
	cpsrv3.setPublicationDate(null);
	cpsrv3.setReferenceNumber("356742620");
	cpsrv3.setUnavailable(false);
	cpsrv3.setStartDate(null);
	cpsrv3.setEndDate(null);
	cpsrv3.setRequest(false);
	cpsrv3.setPrice(20);
	cpsrv3.setCarPoolingType(CarPoolingType.HOME_TO_WORK);
	cpsrv3.setAvailableSeats(1);
	cpsrv3.setPetAllowed(false);
	cpsrv3.setSmokingAllowed(true);
	cpsrv3.setMusicAllowed(true);
	cpsrv3.setChattingAllowed(true);
	cpsrv3.setUserAccountProvider(ua10);
	cpsrv3.setTrajectory(t11);
	em.persist(cpsrv3);
	
	CarPoolingService cpsrv4 = new CarPoolingService();
	cpsrv4.setServicetype(ServiceType.CAR_POOLING);
	cpsrv4.setPublicationDate(null);
	cpsrv4.setReferenceNumber("668318662");
	cpsrv4.setUnavailable(false);
	cpsrv4.setStartDate(null);
	cpsrv4.setEndDate(null);
	cpsrv4.setRequest(false);
	cpsrv4.setPrice(25);
	cpsrv4.setCarPoolingType(CarPoolingType.HOME_TO_WORK);
	cpsrv4.setAvailableSeats(4);
	cpsrv4.setPetAllowed(false);
	cpsrv4.setSmokingAllowed(true);
	cpsrv4.setMusicAllowed(true);
	cpsrv4.setChattingAllowed(true);
	cpsrv4.setUserAccountProvider(ua4);
	cpsrv4.setTrajectory(t14);
	em.persist(cpsrv4);
	
	CarPoolingService cpsrv5 = new CarPoolingService();
	cpsrv5.setServicetype(ServiceType.CAR_POOLING);
	cpsrv5.setPublicationDate(null);
	cpsrv5.setReferenceNumber("671498279");
	cpsrv5.setUnavailable(false);
	cpsrv5.setStartDate(null);
	cpsrv5.setEndDate(null);
	cpsrv5.setRequest(false);
	cpsrv5.setPrice(8);
	cpsrv5.setCarPoolingType(CarPoolingType.HOME_TO_SCHOOL);
	cpsrv5.setAvailableSeats(3);
	cpsrv5.setPetAllowed(false);
	cpsrv5.setSmokingAllowed(false);
	cpsrv5.setMusicAllowed(true);
	cpsrv5.setChattingAllowed(true);
	cpsrv5.setUserAccountProvider(ua8);
	cpsrv5.setTrajectory(t15);
	em.persist(cpsrv5);
	
	CarPoolingService cpsrv6 = new CarPoolingService();
	cpsrv6.setServicetype(ServiceType.CAR_POOLING);
	cpsrv6.setPublicationDate(null);
	cpsrv6.setReferenceNumber("749189622");
	cpsrv6.setUnavailable(false);
	cpsrv6.setStartDate(null);
	cpsrv6.setEndDate(null);
	cpsrv6.setRequest(false);
	cpsrv6.setPrice(30);
	cpsrv6.setCarPoolingType(CarPoolingType.TRAVEL);
	cpsrv6.setAvailableSeats(2);
	cpsrv6.setPetAllowed(true);
	cpsrv6.setSmokingAllowed(false);
	cpsrv6.setMusicAllowed(true);
	cpsrv6.setChattingAllowed(true);
	cpsrv6.setUserAccountProvider(ua2);
	cpsrv6.setTrajectory(t1);
	em.persist(cpsrv6);
	
	CarPoolingService cpsrv7 = new CarPoolingService();
	cpsrv7.setServicetype(ServiceType.CAR_POOLING);
	cpsrv7.setPublicationDate(null);
	cpsrv7.setReferenceNumber("801382500");
	cpsrv7.setUnavailable(false);
	cpsrv7.setStartDate(null);
	cpsrv7.setEndDate(null);
	cpsrv7.setRequest(false);
	cpsrv7.setPrice(35);
	cpsrv7.setCarPoolingType(CarPoolingType.TRAVEL);
	cpsrv7.setAvailableSeats(2);
	cpsrv7.setPetAllowed(false);
	cpsrv7.setSmokingAllowed(false);
	cpsrv7.setMusicAllowed(false);
	cpsrv7.setChattingAllowed(false);
	cpsrv7.setUserAccountProvider(ua6);
	cpsrv7.setTrajectory(t4);
	em.persist(cpsrv7);
	
	CarPoolingService cpsrv8 = new CarPoolingService();
	cpsrv8.setServicetype(ServiceType.CAR_POOLING);
	cpsrv8.setPublicationDate(null);
	cpsrv8.setReferenceNumber("252593897");
	cpsrv8.setUnavailable(false);
	cpsrv8.setStartDate(null);
	cpsrv8.setEndDate(null);
	cpsrv8.setRequest(false);
	cpsrv8.setPrice(30);
	cpsrv8.setCarPoolingType(CarPoolingType.TRAVEL);
	cpsrv8.setAvailableSeats(2);
	cpsrv8.setPetAllowed(false);
	cpsrv8.setSmokingAllowed(false);
	cpsrv8.setMusicAllowed(false);
	cpsrv8.setChattingAllowed(false);
	cpsrv8.setUserAccountProvider(ua7);
	cpsrv8.setTrajectory(t10);
	em.persist(cpsrv8);
	
	CarPoolingService cpsrv9 = new CarPoolingService();
	cpsrv9.setServicetype(ServiceType.CAR_POOLING);
	cpsrv9.setPublicationDate(null);
	cpsrv9.setReferenceNumber("708569084");
	cpsrv9.setUnavailable(false);
	cpsrv9.setStartDate(null);
	cpsrv9.setEndDate(null);
	cpsrv9.setRequest(true);
	cpsrv9.setPrice(10);
	cpsrv9.setCarPoolingType(CarPoolingType.HOME_TO_WORK);
	cpsrv9.setAvailableSeats(4);
	cpsrv9.setPetAllowed(false);
	cpsrv9.setSmokingAllowed(true);
	cpsrv9.setMusicAllowed(true);
	cpsrv9.setChattingAllowed(false);
	cpsrv9.setUserAccountProvider(ua4);
	cpsrv9.setTrajectory(t11);
	em.persist(cpsrv9);

	CarPoolingService cpsrv10 = new CarPoolingService();
	cpsrv10.setServicetype(ServiceType.CAR_POOLING);
	cpsrv10.setPublicationDate(null);
	cpsrv10.setReferenceNumber("703969084");
	cpsrv10.setUnavailable(false);
	cpsrv10.setStartDate(null);
	cpsrv10.setEndDate(null);
	cpsrv10.setRequest(true);
	cpsrv10.setPrice(5);
	cpsrv10.setCarPoolingType(CarPoolingType.HOME_TO_WORK);
	cpsrv10.setAvailableSeats(2);
	cpsrv10.setPetAllowed(false);
	cpsrv10.setSmokingAllowed(true);
	cpsrv10.setMusicAllowed(true);
	cpsrv10.setChattingAllowed(true);
	cpsrv10.setUserAccountProvider(ua8);
	cpsrv10.setTrajectory(t15);
	em.persist(cpsrv10);
	
	//Parcel Services
	ParcelService psrv1 = new ParcelService();
	psrv1.setServicetype(ServiceType.PARCEL);
	psrv1.setPublicationDate(null);
	psrv1.setReferenceNumber("956875084");
	psrv1.setUnavailable(false);
	psrv1.setStartDate(null);
	psrv1.setEndDate(null);
	psrv1.setRequest(false);
	psrv1.setPrice(20);
	psrv1.setBarCode(1428921);
	psrv1.setWeightKilogrammes(2);
	psrv1.setAtypicalVolume(false);
	psrv1.setFragile(true);
	psrv1.setUserAccountProvider(ua9);
	psrv1.setTrajectory(t4);
	em.persist(psrv1);
	
	ParcelService psrv2 = new ParcelService();
	psrv2.setServicetype(ServiceType.PARCEL);
	psrv2.setPublicationDate(null);
	psrv2.setReferenceNumber("703165710");
	psrv2.setUnavailable(false);
	psrv2.setStartDate(null);
	psrv2.setEndDate(null);
	psrv2.setRequest(false);
	psrv2.setPrice(10);
	psrv2.setBarCode(206179074);
	psrv2.setWeightKilogrammes(4);
	psrv2.setAtypicalVolume(true);
	psrv2.setFragile(false);
	psrv2.setUserAccountProvider(ua10);
	psrv2.setTrajectory(t8);
	em.persist(psrv2);
	
	ParcelService psrv3 = new ParcelService();
	psrv3.setServicetype(ServiceType.PARCEL);
	psrv3.setPublicationDate(null);
	psrv3.setReferenceNumber("408023605");
	psrv3.setUnavailable(false);
	psrv3.setStartDate(null);
	psrv3.setEndDate(null);
	psrv3.setRequest(true);
	psrv3.setPrice(10);
	psrv3.setBarCode(963384109);
	psrv3.setWeightKilogrammes(4);
	psrv3.setAtypicalVolume(true);
	psrv3.setFragile(false);
	psrv3.setUserAccountProvider(ua10);
	psrv3.setTrajectory(t5);
	em.persist(psrv3);
	
	//CarRental Services
	CarRentalService crsrv1 = new CarRentalService();
	crsrv1.setServicetype(ServiceType.CAR_RENTAL);
	crsrv1.setPublicationDate(null);
	crsrv1.setReferenceNumber("046684449");
	crsrv1.setUnavailable(false);
	crsrv1.setStartDate(null);
	crsrv1.setEndDate(null);
	crsrv1.setRequest(false);
	crsrv1.setPrice(50);
	crsrv1.setKeyDropOffAddress("5 Rue Saint-Severin 75005 Paris");
	crsrv1.setKeyPickUpAddress("8 Rue de la Main d'Or 75011 Paris");
	crsrv1.setUserAccountProvider(ua5);
	crsrv1.setVehicule(vUa10);
	em.persist(crsrv1);
	
	CarRentalService crsrv2 = new CarRentalService();
	crsrv2.setServicetype(ServiceType.CAR_RENTAL);
	crsrv2.setPublicationDate(null);
	crsrv2.setReferenceNumber("284613812");
	crsrv2.setUnavailable(false);
	crsrv2.setStartDate(null);
	crsrv2.setEndDate(null);
	crsrv2.setRequest(false);
	crsrv2.setPrice(35);
	crsrv2.setKeyDropOffAddress("198 Rue de Tolbiac 75013 Paris");
	crsrv2.setKeyPickUpAddress("23 Rue Muller 75018 Paris");
	crsrv2.setUserAccountProvider(ua8);
	crsrv2.setVehicule(vUa5);
	em.persist(crsrv2);
	
	CarRentalService crsrv3 = new CarRentalService();
	crsrv3.setServicetype(ServiceType.CAR_RENTAL);
	crsrv3.setPublicationDate(null);
	crsrv3.setReferenceNumber("516193919");
	crsrv3.setUnavailable(false);
	crsrv3.setStartDate(null);
	crsrv3.setEndDate(null);
	crsrv3.setRequest(true);
	crsrv3.setPrice(25);
	crsrv3.setKeyDropOffAddress("15 Place Vendome 75018 Paris");
	crsrv3.setKeyPickUpAddress("18 Rue des 3 Freres 75018 Paris");
	crsrv3.setUserAccountProvider(ua9);
	crsrv3.setVehicule(vUa9);
	em.persist(crsrv3);
	
	//Personal Assistance Services
	PersonalAssistanceService pasrv1 = new PersonalAssistanceService();
	pasrv1.setServicetype(ServiceType.PERSONAL_ASSISTANCE);
	pasrv1.setPublicationDate(null);
	pasrv1.setReferenceNumber("91915151");
	pasrv1.setUnavailable(false);
	pasrv1.setStartDate(null);
	pasrv1.setEndDate(null);
	pasrv1.setRequest(true);
	pasrv1.setPrice(30);
	pasrv1.setUrgent(true);
	pasrv1.setPersonalAssistanceType(PersonalAssistanceType.MEDICAL);
	pasrv1.setTrajectory(t10);
	pasrv1.setUserAccountProvider(ua5);
	em.persist(pasrv1);
	
	PersonalAssistanceService pasrv2 = new PersonalAssistanceService();
	pasrv2.setServicetype(ServiceType.PERSONAL_ASSISTANCE);
	pasrv2.setPublicationDate(null);
	pasrv2.setReferenceNumber("15946853");
	pasrv2.setUnavailable(false);
	pasrv2.setStartDate(null);
	pasrv2.setEndDate(null);
	pasrv2.setRequest(true);
	pasrv2.setPrice(15);
	pasrv2.setUrgent(false);
	pasrv2.setPersonalAssistanceType(PersonalAssistanceType.GROCERY);
	pasrv2.setTrajectory(t15);
	pasrv2.setUserAccountProvider(ua7);
	em.persist(pasrv2);
	
		
	
	
	
	
    }
}